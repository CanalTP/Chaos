""" Create table Category

Revision ID: 4ddbd7d83e6a
Revises: 1b9a20f9a38f
Create Date: 2015-01-16 16:15:26.335065

"""

# revision identifiers, used by Alembic.
revision = '4ddbd7d83e6a'
down_revision = '1b9a20f9a38f'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('is_visible', sa.Boolean(), nullable=False),
    sa.Column('client_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], [u'client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'client_id', name='category_name_client_id_key')
    )
    op.add_column('cause', sa.Column('category_id', postgresql.UUID(), nullable=True))

    connection = op.get_bind()
    rows = connection.execute('select created_at as created_at, id as id, category, client_id from cause')
    for row in rows:
        if row['category'] and row['category'] != '':
            op.execute("insert into category (id, name, created_at, client_id, is_visible) "
                       "values(\'{}\', \'{}\', \'{}\', \'{}\', {})".
                       format(row['id'], row['category'], row['created_at'], row['client_id'], True))
            op.execute("update cause set category_id= \'{}\' where id=\'{}\' ".
                       format(row['id'], row['id']))

    op.drop_column('cause', 'category')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('cause', sa.Column('category', sa.Text(), nullable=True))
    connection = op.get_bind()
    connection.execute('update cause c set category=cn.name from category cn '
                       'where c.category_id=cn.id and c.category_id is not null')

    op.drop_column('cause', 'category_id')
    op.drop_table('category')
    ### end Alembic commands ###
