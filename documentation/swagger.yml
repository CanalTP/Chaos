---
swagger: '2.0'

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: v1
  title: Documentation of API Chaos
  description: |
    Chaos is the web service which can feed [Navitia](https://github.com/CanalTP/navitia) with real-time [disruptions](http://doc.navitia.io/#traffic-reports).

    It can work together with [Kirin](https://github.com/CanalTP/kirin) which can feed [Navitia](https://github.com/CanalTP/navitia) with real-time delays.

    Chaos manage disruptions and help you to communicate with your travellers on the best.

    ** Requirements **

    Before using Chaos, you will need few things:
     * a Navitia token, allowing you to request navitia on a data coverage
     * a customer ID
     * a contributor ID

    Your usual Kisio Digital interlocutor can provide you these elements, and an access to the production or pre-production platform.
    Before using the API in production, you will need to provide:
     * integration specifications
     * expected load your application will generate.

    These two points are recquired to help us managing the Chaos platform.
  license:
    name: AGPL
    url: "http://www.gnu.org/licenses/agpl-3.0.html"

################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: 127.0.0.1:5000
basePath: /
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json

################################################################################
#                                   Tags                                       #
################################################################################
tags:
  - name: Category
  - name: Channel
  - name: Channel type
  - name: Cause
  - name: Property
  - name: Severity
  - name: Status
  - name: Tag
paths:
  /categories:
    get:
      description: Retrieve the list of all categories
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      tags:
        - Category
      responses:
        200:
          description: List of categories
          schema:
            type: object
            properties:
              meta:
                type: object
              categories:
                type: array
                items:
                  $ref: "#/definitions/category"
    post:
      description: Creates a category
      consumes:
        - application/json
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - in: body
        name: body
        description: Category that needs to be stored
        schema:
          $ref: "#/definitions/category_creation"
      tags:
        - Category
      responses:
        201:
          description: Created category
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/category"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/error_occured"
  /categories/{id}:
    get:
      description: Retrieve the category identified by ID
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Category
      responses:
        200:
          description: Category entity
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/category"
        400:
          description: Wrong ID
          schema:
            type: object
            properties:
              error:
                $ref: "#/definitions/bad_id"
    put:
      description: Update a category
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      - in: body
        name: body
        description: Category that needs to be stored
        schema:
          $ref: "#/definitions/category_creation"
      tags:
        - Category
      responses:
        200:
          description: Category entity
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/category"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/error_occured"
    delete:
      description: remove a severity
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Category
      responses:
        204:
          description: Category has been removed
        400:
          description: Wrong ID
          schema:
            type: object
            properties:
              error:
                $ref: "#/definitions/bad_id"
  /causes:
    get:
      description: Retrieve the list of all causes
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      tags:
        - Cause
      responses:
        200:
          description: List of causes
          schema:
            type: object
            properties:
              meta:
                type: object
              causes:
                type: array
                items:
                  $ref: "#/definitions/cause"
    post:
      description: Creates a cause
      consumes:
        - application/json
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - in: body
        name: body
        description: Cause that needs to be stored
        schema:
          $ref: "#/definitions/cause_creation"
      tags:
        - Cause
      responses:
        201:
          description: Created cause
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/cause"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/error_occured"
  /causes/{id}:
    get:
      description: Retrieve the cause identified by ID
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Cause
      responses:
        200:
          description: Cause entity
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/cause"
        400:
          description: Wrong ID
          schema:
            type: object
            properties:
              error:
                $ref: "#/definitions/bad_id"
    put:
      description: Update a cause
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      - in: body
        name: body
        description: Cause that needs to be stored
        schema:
          $ref: "#/definitions/cause_creation"
      tags:
        - Cause
      responses:
        200:
          description: Cause entity
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/cause"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/error_occured"
    delete:
      description: remove a severity
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Cause
      responses:
        204:
          description: Cause has been removed
        400:
          description: Wrong ID
          schema:
            type: object
            properties:
              error:
                $ref: "#/definitions/bad_id"
  /channels:
    get:
      description: Retrieves all the channels
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      tags:
        - Channel
      responses:
        200:
          description: List of channels
          schema:
            type: object
            properties:
              meta:
                type: object
              channels:
                type: array
                items:
                  $ref: "#/definitions/channel"
    post:
      description: Creates a channel
      consumes:
        - application/json
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - in: body
        name: body
        description: Channel that needs to be stored
        schema:
          $ref: "#/definitions/channel_creation"
      tags:
        - Channel
      responses:
        201:
          description: Created channel
          schema:
            type: object
            properties:
              channel:
                $ref: "#/definitions/channel"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              channel:
                $ref: "#/definitions/error_occured"
  /channels/{id}:
    get:
      description: Retrieve the channel identified by ID
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Channel
      responses:
        200:
          description: Channel entity
          schema:
            type: object
            properties:
              channel:
                $ref: "#/definitions/channel"
        400:
          description: ID is wrong
          schema:
            type: object
            properties:
              channel:
                $ref: "#/definitions/bad_id"
    put:
      description: Update a channel
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      - in: body
        name: body
        description: Category that needs to be stored
        schema:
          $ref: "#/definitions/channel_creation"
      tags:
        - Channel
      responses:
        200:
          description: Channel entity
          schema:
            type: object
            properties:
              channel:
                $ref: "#/definitions/channel"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              channel:
                $ref: "#/definitions/error_occured"
    delete:
      description: remove a channel
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Channel
      responses:
        204:
          description: Channel has been removed
        400:
          description: Wrong ID
          schema:
            type: object
            properties:
              error:
                $ref: "#/definitions/bad_id"
  /channel_types:
    get:
      description: Retrieve the list of channel types
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      tags:
        - Channel type
      responses:
        200:
          description: List of channel types
          schema:
            type: object
            properties:
              channel_types:
                type: array
                items:
                  type: "string"
  /properties:
    get:
      description: Retrieve the list of all properties
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      tags:
        - Property
      responses:
        200:
          description: List of properties
          schema:
            type: object
            properties:
              meta:
                type: object
              properties:
                type: array
                items:
                  $ref: "#/definitions/property"
    post:
      description: Creates a property
      consumes:
        - application/json
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - in: body
        name: body
        description: Property that needs to be stored
        schema:
          $ref: "#/definitions/property_creation"
      tags:
        - Property
      responses:
        201:
          description: Created
          schema:
            type: object
            properties:
              property:
                $ref: "#/definitions/property"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              property:
                $ref: "#/definitions/error_occured"
  /properties/{id}:
    get:
      description: Retrieve the property identified by ID
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Property
      responses:
        200:
          description: Property entity
          schema:
            type: object
            properties:
              property:
                $ref: "#/definitions/property"
        404:
          description: Wrong ID
          schema:
            type: object
            properties:
              error:
                $ref: "#/definitions/error_occured"
    put:
      description: Update a property
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      - in: body
        name: body
        description: Property that needs to be stored
        schema:
          $ref: "#/definitions/property_creation"
      tags:
        - Property
      responses:
        200:
          description: Property entity
          schema:
            type: object
            properties:
              property:
                $ref: "#/definitions/property"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              property:
                $ref: "#/definitions/error_occured"
    delete:
      description: remove a property
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Property
      responses:
        204:
          description: Property has been removed
        404:
          description: Wrong ID
          schema:
            type: object
            properties:
              error:
                $ref: "#/definitions/error_occured"
  /severities:
    get:
      description: Retrieves all the severities ordered by priority
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      tags:
        - Severity
      responses:
        200:
          description: List of severities
          schema:
            type: object
            properties:
              meta:
                type: object
              severities:
                type: array
                items:
                  $ref: "#/definitions/severity"
    post:
      description: Creates a severity
      consumes:
        - application/json
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - in: body
        name: body
        description: Severity that needs to be stored
        schema:
          $ref: "#/definitions/severity_creation"
      tags:
        - Severity
      responses:
        201:
          description: Created severity
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/severity"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/error_occured"
  /severities/{id}:
    get:
      description: Retrieve the severity identified by ID
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Severity
      responses:
        200:
          description: Severity entity
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/severity"
        400:
          description: Wrong ID
          schema:
            type: object
            properties:
              error:
                $ref: "#/definitions/bad_id"
    put:
      description: Update a severity
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      - in: body
        name: body
        description: Category that needs to be stored
        schema:
          $ref: "#/definitions/severity_creation"
      tags:
        - Severity
      responses:
        200:
          description: Severity entity
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/severity"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              severity:
                $ref: "#/definitions/error_occured"
    delete:
      description: remove a severity
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Severity
      responses:
        204:
          description: Severity has been removed
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              error:
                $ref: "#/definitions/bad_id"
  /status:
    get:
      description: Renders state of application
      tags:
        - Status
      responses:
        200:
          description: Renders information about configuration of different components
          schema:
            type: object
            properties:
              version:
                type: string
                description: version of application
              db_pool_status:
                type: string
              db_version:
                type: string
                description: version of db migration
              navitia_url:
                type: string
                description: URL of navitia Web Service
              rabbitmq_info:
                type: object
                description: Information about configuration of RabbitMQ
                properties:
                  alternates:
                    type: array
                    description: Information about usage of RabbitMQ
                  connect_timeout:
                    type: integer
                  heartbeat:
                    type: integer
                  hostname:
                    type: string
                  insist:
                    type: boolean
                  is_active:
                    type: boolean
                  is_connected:
                    type: boolean
                  login_method:
                    type: string
                  port:
                    type: integer
                  ssl:
                    type: boolean
                  transport:
                    type: string
                  transport_options:
                    type: object
                  uri_prefix:
                    type: string
                  userid:
                    type: string
                  virtual_host:
                    type: string
  /tags:
    get:
      description: Retrieve the list of all tags
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      tags:
        - Tag
      responses:
        200:
          description: List of tags
          schema:
            type: object
            properties:
              meta:
                type: object
              tags:
                type: array
                items:
                  $ref: "#/definitions/tag"
    post:
      description: Creates a tag
      consumes:
        - application/json
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - in: body
        name: body
        description: Tag that needs to be stored
        schema:
          $ref: "#/definitions/tag_creation"
      tags:
        - Tag
      responses:
        201:
          description: Created tag
          schema:
            type: object
            properties:
              tag:
                $ref: "#/definitions/tag"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              tag:
                $ref: "#/definitions/error_occured"
  /tags/{id}:
    get:
      description: Retrieve the tag identified by ID
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Tag
      responses:
        201:
          description: Tag could be find
          schema:
            type: object
            properties:
              tag:
                $ref: "#/definitions/tag"
        400:
          description: Wrong ID
          schema:
            type: object
            properties:
              error:
                $ref: "#/definitions/bad_id"
    put:
      description: Update a tag
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      - in: body
        name: body
        description: Category that needs to be stored
        schema:
          $ref: "#/definitions/tag_creation"
      tags:
        - Tag
      responses:
        200:
          description: Tag entity
          schema:
            type: object
            properties:
              tag:
                $ref: "#/definitions/tag"
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              tag:
                $ref: "#/definitions/error_occured"
    delete:
      description: remove a tag
      parameters:
      - $ref: "#/parameters/header_authorization"
      - $ref: "#/parameters/header_coverage"
      - $ref: "#/parameters/header_customer_id"
      - $ref: "#/parameters/header_contributors"
      - $ref: "#/parameters/entity_id"
      tags:
        - Tag
      responses:
        204:
          description: Tag has been removed
        400:
          description: BAD REQUEST
          schema:
            type: object
            properties:
              error:
                $ref: "#/definitions/bad_id"

################################################################################
#                                 Parameters                                  #
################################################################################
parameters:
  header_customer_id:
    in: header
    required: true
    type: string
    description: Client code. A client is owner of cause, channel, severity and tag
    name: X-Customer-Id
  header_coverage:
    in: header
    required: true
    type: string
    description: Coverage of navitia services
    name: X-Coverage
  header_authorization:
    in: header
    required: true
    type: string
    description: Token for navitia services
    name: Authorization
  header_contributors:
    required: true
    type: string
    description: Contributor code. A contributor is owner of a disruption
    name: X-Contributors
    in: header
  entity_id:
    required: true
    type: string
    description: Entity identifier
    name: id
    in: path

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  bad_id:
    type: "object"
    properties:
      message:
        type: "string"
  error_occured:
    type: "object"
    properties:
      error:
        type: "object"
        properties:
          message :
            type: "string"
  href:
    type: "object"
    properties:
      href:
        type: "string"
  wording:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "string"
  severity:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      self:
        type: "object"
        $ref: "#/definitions/href"
      color:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      effect:
        type: "string"
      priority:
        type: "integer"
      updated_at:
        type: "string"
        format: "date-time"
      wording:
        type: "string"
      wordings:
        type: "array"
        items:
          $ref: "#/definitions/wording"
  severity_creation:
    type: "object"
    properties:
      color:
        type: "string"
      effect:
        type: "string"
      priority:
        type: "integer"
      wordings:
        type: "array"
        items:
          $ref: "#/definitions/wording"
  category:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      self:
        type: "object"
        $ref: "#/definitions/href"
      name:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  category_creation:
    type: "object"
    properties:
      name:
        type: "string"
  cause:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      wordings:
        type: "array"
        items:
          $ref: "#/definitions/wording"
      category:
        type: "object"
        $ref: "#/definitions/category"
      self:
        type: "object"
        $ref: "#/definitions/href"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  cause_creation:
    type: "object"
    properties:
      wording:
        type: "string"
      wordings:
        type: "array"
        items:
          $ref: "#/definitions/wording"
      category:
        type: "object"
        properties:
          id:
            type: "string"
            format: "uuid"
  channel:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      self:
        type: "object"
        $ref: "#/definitions/href"
      name:
        type: "string"
      content_type:
        type: "string"
      max_size:
        type: "integer"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
      types:
        type: "array"
        items:
          type: "string"
  channel_creation:
    type: "object"
    properties:
      color:
        type: "string"
      effect:
        type: "string"
      priority:
        type: "integer"
      wordings:
        type: "array"
        items:
          type: "string"
  property:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      self:
        type: "object"
        $ref: "#/definitions/href"
      key:
        type: "string"
      type:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  property_creation:
    type: "object"
    properties:
      key:
        type: "string"
      type:
        type: "string"
  tag:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      self:
        type: "object"
        $ref: "#/definitions/href"
      name:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      updated_at:
        type: "string"
        format: "date-time"
  tag_creation:
    type: "object"
    properties:
      name:
        type: "string"