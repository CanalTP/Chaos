version: '3.8'

services:
  ws:
    image: navitia/chaos-ws:${VERSION}
    build:
      context: .
      dockerfile: docker/Dockerfile
    networks:
      - chaos
      - lb-common
    environment:
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - DEBUG=${DEBUG}
      - NAVITIA_URL=${NAVITIA_URL}
      - NAVITIA_TIMEOUT=${NAVITIA_TIMEOUT}
      - RABBITMQ_CONNECTION_STRING=${RABBITMQ_CONNECTION_STRING}
      - CACHE_TYPE=${CACHE_TYPE}
      - CACHE_DEFAULT_TIMEOUT=${CACHE_DEFAULT_TIMEOUT}
      - NAVITIA_CACHE_TIMEOUT=${NAVITIA_CACHE_TIMEOUT}
      - NAVITIA_PUBDATE_CACHE_TIMEOUT=${NAVITIA_PUBDATE_CACHE_TIMEOUT}
      - CACHE_REDIS_HOST=${CACHE_REDIS_HOST}
      - CACHE_REDIS_PORT=${CACHE_REDIS_PORT}
      - CACHE_REDIS_PASSWORD=${CACHE_REDIS_PASSWORD}
      - CACHE_REDIS_DB=${CACHE_REDIS_DB}
      - CACHE_KEY_PREFIX=${CACHE_KEY_PREFIX}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
      - RABBITMQ_ENABLED=${RABBITMQ_ENABLED}
      - PROFILING_ENABLED=${PROFILING_ENABLED}
      - IMPACT_EXPORT_DIR=${IMPACT_EXPORT_DIR}
      - IMPACT_EXPORT_PYTHON=${IMPACT_EXPORT_PYTHON}
      - NEW_RELIC_CONFIG_FILE=${NEW_RELIC_CONFIG_FILE}
      - CACHE_CONFIGURATION=${CACHE_CONFIGURATION}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: ${FLUENTD_ADDRESS}
        tag: chaos.ws.http
        fluentd-async-connect: "true"
    deploy:
      replicas: "${REPLICAS_CHAOS_APACHE}"
      labels:
        - "traefik.frontend.rule=Host:chaos-${ENV}.canaltp.fr,chaos-${ENV}.canaltp.prod"
        - "traefik.docker.network=lb-common"
        - "traefik.port=5000"
        - "traefik.frontend.entryPoints=http"
        - "traefik.enable=true"
    volumes:
      - ./exports:/data/exports:rw
      - ./newrelic.ini:/conf/newrelic.ini:ro

networks:
  chaos:
    name: chaos_network
    driver: overlay
  lb-common:
    external: true
